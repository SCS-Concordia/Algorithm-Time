var _reduceObject = function(obj) {
    return Object.keys(obj).reduce(function(m, n) {
        var val = obj[n];
        if (val.toNative instanceof Function) {
            m[n] = val.toNative();
        } else if (val === Object(val)) {
            m[n] = _reduceObject(val);
        } else {
            m[n] = val;
        }
        return m;
    }, {});
};

module.exports = function(val) {
    if (val.toNative instanceof Function) {
        return val.toNative();
    } else if (val === Object(val)) {
        return _reduceObject(val);
    } else {
        return val;
    }
};
