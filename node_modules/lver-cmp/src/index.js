var fs   = require("fs");
var Rx   = require("rx");

var readFile = Rx.Observable.fromNodeCallback(fs.readFile);
var lver     = Rx.Observable.fromNodeCallback(require("lver"));

module.exports = function(path, next) {
    return readFile(path, {encoding: "utf8"}).flatMap(function(file) {
        var json    = JSON.parse(file);
        var current = json.dependencies;
        var keys    = Rx.Observable.fromArray(Object.keys(current));
        var latests = keys.map(function(n) { return lver(n); }).concatAll();

        return keys.zip(latests, function(key, latest) {
            return { key: key, latest: latest };
        }).reduce(function(cmp, n) {
            cmp[n.key] = {
                current: current[n.key],
                latest:  n.latest
            };
            return cmp;
        }, {}).doAction(
            function(n) { if (next) { next(null, n) } },
            function(e) { if (next) { next(e); } }
        );
    });
};
